#!/usr/bin/env bash
function compareTools() {
    
            cat $1/DEL.vcf.bedpe | awk '$6-$2 > 100' | cut -f1-6 > file1
            cat $2/DEL.vcf.bedpe | awk '$6-$2 > 100' | cut -f1-6 > file2

            # deletion overlap
            delOvlap="$(bedtools pairtopair -type both -is -slop $3 -a file1 -b file2 | cut -f1-6 | sort | uniq | wc -l)" 
            nDels="$(wc -l file1)"
            nDels1="$(echo $nDels | cut -d " " -f1)"            
            nDels="$(wc -l file2)"
            nDels2="$(echo $nDels | cut -d " " -f1)"
            echo "Dels:" "$(bc<<<"scale=4; $delOvlap/$nDels1")"
            echo $nDels1 $nDels2

            # duplication overlap
            cat $1/DUP.vcf.bedpe | awk '$6-$2 > 100' | cut -f1-6 > file1
            cat $2/DUP.vcf.bedpe | awk '$6-$2 > 100' | cut -f1-6 > file2
            dupOvlap="$(bedtools pairtopair -type both -is -slop $3 -a file1 -b file2 | cut -f1-6 | sort | uniq | wc -l)" 
            nDups="$(wc -l file1)"
            nDups1="$(echo $nDups | cut -d " " -f1)"
            nDups="$(wc -l file2)"
            nDups2="$(echo $nDups | cut -d " " -f1)"
            echo "Dups:" "$(bc<<<"scale=4; $dupOvlap/$nDups1")"
            echo $nDups1 $nDups2

            # inversion overlap
            cat $1/INV.vcf.bedpe | awk '$6-$2 > 100' | cut -f1-6 > file1
            cat $2/INV.vcf.bedpe | awk '$6-$2 > 100' | cut -f1-6 > file2
            invOvlap="$(bedtools pairtopair -type both -is -slop $3 -a file1 -b file2 | cut -f1-6 | sort | uniq | wc -l)" 
            nInvs="$(wc -l file1)"
            nInvs1="$(echo $nInvs | cut -d " " -f1)"
            nInvs="$(wc -l file2)"
            nInvs2="$(echo $nInvs | cut -d " " -f1)"
            echo "Invs:" "$(bc<<<"scale=4; $invOvlap/$nInvs1")"
            echo $nInvs1 $nInvs2

            nSVs=$(( $delOvlap + $dupOvlap + $invOvlap ))
            nCalls1=$(( $nDels1 + $nDups1 + $nInvs1 ))
            nCalls2=$(( $nDels2 + $nDups2 + $nInvs2 ))
            finalOlap="$(bc<<<"scale=4; $nSVs/$nCalls1")"
            echo "Final:" $finalOlap
            echo $nCalls1 $nCalls2
}
 
tools=($1 $2 $3 $4)
for i in "${tools[@]}"
do
    for j in "${tools[@]}"
    do
        if [ "$i" != "." ] && [ "$j" != "." ]
        then
            echo $i $j
            # make sure DUP:TANDEM is selected if tool provides label
            if [ "$i" = "$j" ]
            then
                echo "Comparing", $i, ERR, to $i, SRR5 
                compareTools ${i}/ERR ${i}/SRR5 $5
                echo "Comparing", $i, ERR, to $i, SRR3
                compareTools ${i}/ERR ${i}/SRR3 $5

                echo "Comparing", $i, SRR5, to $i, ERR
                compareTools ${i}/SRR5 ${i}/ERR $5
                echo "Comparing", $i, SRR5, to $i, SRR3
                compareTools ${i}/SRR5 ${i}/SRR3 $5

                echo "Comparing", $i, SRR3, to $i, ERR
                compareTools ${i}/SRR3 ${i}/ERR $5
                echo "Comparing", $i, SRR3, to $i, SRR5
                compareTools ${i}/SRR3 ${i}/SRR5 $5
            else
                echo "Comparing", $i, ERR, to $j, ERR
                compareTools ${j}/ERR ${j}/ERR $5
                echo "Comparing", $i, ERR, to $j, SRR5
                compareTools ${i}/ERR ${j}/SRR5 $5
                echo "Comparing", $i, ERR, to $j, SRR3
                compareTools ${i}/ERR ${j}/SRR3 $5  

                echo "Comparing", $i, SRR5, to $j, ERR
                compareTools ${i}/SRR5 ${j}/ERR $5
                echo "Comparing", $i, SRR5, to $j, SRR5
                compareTools ${i}/SRR5 ${j}/SRR5 $5
                echo "Comparing", $i, SRR5, to $j, SRR3
                compareTools ${i}/SRR5 ${j}/SRR3 $5

                echo "Comparing", $i, SRR3, to $j, ERR
                compareTools ${i}/SRR3 ${j}/ERR $5
                echo "Comparing", $i, SRR3, to $j, SRR5
                compareTools ${i}/SRR3 ${j}/SRR5 $5
                echo "Comparing", $i, SRR3, to $j, SRR3
                compareTools ${i}/SRR3 ${j}/SRR3 $5
            fi
        fi
    done
done
